@{
    ViewBag.Title = "Requirements";
}

<h1>Requirements</h1>

<div class="container">
	<div class="row">
		<div class="col-sm-8">
			<p>
				This is a very simple app that provides opportunities for assessing your experience across the entire web development stack, from the database through JavaScript.
				Though contrived, this is representative of the types of things you would do as a developer on our product.
			<p>
			<p>
				Your mission, if you choose to accept it, is to complete as many of the "requirements" at the bottom of this page as you can/want to. The goal is to
				create a code sample that we can use as the basis for a conversation about how you approach your work.
			</p>
			<p>
				<b>Please don't feel obligated to spend more than 2-3 hours on this</b> (unless of course you want to).
			</p>

			<p><i>If you don't know how to do something, skip it. Googling for technical help is allowed. Ask clarifying questions if needed!</i></p>


			<h3>Task 1 - Implement an "edit" screen for a Member</h3>
			<p>
				The <a href="/Members/List">Member List</a> page displays a list of people. It currently has a button for creating a new Member, but there is
				no "edit" functionality.
			</p>
			<ol>
				<li>Add something to the grid that, when clicked, displays a popup containing the current member details and allows them to be edited.</li>
				<li>After saving changes, the grid should be updated to display the new data.</li>
			</ol>


			<h3>Task 2 - Validation</h3>
			<p>
				The "New Member" popup doesn't do any sort of data validation. We really should require valid data; "garbage in, garbage out".
			</p>
			<ol>
				<li>Add validation to require a Name and Email when adding (or editing) a Member.</li>
			</ol>


			<h3>Task 3 - Prevent duplicate email addresses</h3>
			<p>
				Currently, there are no business rules governing validity of member data. That's silly.
			</p>
			<ol>
				<li>Modify the <a href="/Members/List">Member List</a> page to prevent the creation (or editing) of members that would create duplicate email addresses in the system.</li>
				<li>Can you write unit or integration tests for this?</li>
			</ol>


			<h3>Task 4 - Categorization of Members</h3>
			<p>
				This application currently displays lists of Members and lists of Categories, but they are not connected yet. We would like to be able to
				organize Member data by category.
			</p>
			<ol>
				<li>Add a new column to the Member table for associating a Member with a Category. Should be a non-null Foreign Key relationship.</li>
				<li>Modify the <a href="/Members/List">Member List</a> page to collect a Category when adding (or editing) a Member.</li>
				<li>Add "Category" as a new column to the Member List page.</li>
				<li>Add "Member Count" as a new column to the <a href="/Categories/List">Category List</a> page, showing the number of Members in that Category.</li>
			</ol>


			<h3>Task 5 - Sorting and Filtering</h3>
			<p>
				Neither of the list pages currently support any kind of sorting or paging. Users are demanding such conveniences! What to do?
			</p>
			<ol>
				<li>Clicking on a column header on the list pages should sort by that column.</li>
				<li>Is there a way to support filtering?</li>
				<li>When would you use client-side vs server-side filtering/sorting?</li>
			</ol>


			<h3>Task 6 - Your Choice</h3>
			<p>
				There are lots of ways that this sample app could be improved. The code could be organized differently, it could be refactored,
				it could be made prettier and more user-friendly. Find something to improve, and then tell us why your design is better!
			</p>
		</div>
		<div class="col-sm-4">

			<div class="alert alert-info" role="alert">
				<b>It's OK if you can't complete everything!</b><br /><br />
				The point of this exercise is to see how you approach a problem, how you think about it, and what you're comfortable and familiar with.
				It's OK if you don't know how to complete a certain piece, or simply run out of time to do everything.<br /><br />
				<b>That being said, show off if you want to!</b> Feel free to refactor, add libraries, and improve the app all you want. Go ahead and put your best foot forward; the more you write, the more we'll have
				to discuss.<br /><br />
				<h4>Technology Used In This App</h4>
				<ul>
					<li><a href="https://docs.microsoft.com/en-us/aspnet/mvc/overview/getting-started/getting-started-with-ef-using-mvc/creating-an-entity-framework-data-model-for-an-asp-net-mvc-application" target="_blank">Entity Framework</a></li>
					<li><a href="http://malsup.com/jquery/form/" target="_blank">jQuery.Form plugin</a></li>
				</ul>
			</div>
		</div>
	</div>
</div>

